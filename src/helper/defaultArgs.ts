import * as path from "path";

// export const kDefaultLaunchArgs: string[] = [
//   "--no-sandbox",
//   "--no-pings",
//   "--no-zygote",
//   "--mute-audio",
//   "--no-first-run",
//   "--no-default-browser-check",
//   "--disable-software-rasterizer",
//   "--disable-cloud-import",
//   "--disable-gesture-typing",
//   "--disable-setuid-sandbox",
//   "--disable-offer-store-unmasked-wallet-cards",
//   "--disable-offer-upload-credit-cards",
//   "--disable-print-preview",
//   "--disable-voice-input",
//   "--disable-wake-on-wifi",
//   "--disable-cookie-encryption",
//   "--ignore-gpu-blocklist",
//   "--enable-async-dns",
//   "--enable-simple-cache-backend",
//   "--enable-tcp-fast-open",
//   "--enable-webgl",
//   "--prerender-from-omnibox=disabled",
//   "--enable-web-bluetooth",
//   // cannot be turned on because it will cause Chromium to ignore the certificate error
//   // '--ignore-certificate-errors',
//   // '--ignore-certificate-errors-spki-list',
//   "--disable-site-isolation-trials",
//   "--disable-features=AudioServiceOutOfProcess,IsolateOrigins,site-per-process,TranslateUI,BlinkGenPropertyTrees", // do not disable UserAgentClientHint
//   "--aggressive-cache-discard",
//   "--disable-extensions",
//   "--disable-blink-features",
//   "--disable-blink-features=AutomationControlled",
//   "--disable-ipc-flooding-protection",
//   "--enable-features=NetworkService,NetworkServiceInProcess,TrustTokens,TrustTokensAlwaysAllowIssuance", // support ServiceWorkers
//   "--disable-component-extensions-with-background-pages",
//   "--disable-default-apps",
//   "--disable-breakpad",
//   "--disable-component-update",
//   "--disable-domain-reliability",
//   "--disable-sync",
//   "--disable-client-side-phishing-detection",
//   "--disable-hang-monitor",
//   "--disable-popup-blocking",
//   "--disable-prompt-on-repost",
//   "--metrics-recording-only",
//   "--safebrowsing-disable-auto-update",
//   "--password-store=basic",
//   "--autoplay-policy=no-user-gesture-required",
//   "--use-mock-keychain",
//   "--force-webrtc-ip-handling-policy=default_public_interface_only",
//   "--disable-session-crashed-bubble",
//   "--disable-crash-reporter",
//   "--disable-dev-shm-usage",
//   "--force-color-profile=srgb",
//   // Cannot be turned on, as it will cause the canvas hashcode to be different from the normal browser
//   // '--disable-accelerated-2d-canvas',
//   "--disable-translate",
//   "--disable-background-networking",
//   "--disable-background-timer-throttling",
//   "--disable-backgrounding-occluded-windows",
//   "--disable-infobars",
//   "--hide-scrollbars",
//   "--disable-renderer-backgrounding",
//   "--font-render-hinting=none",
//   "--disable-logging",
//   "--use-gl=swiftshader", // better cpu usage with --use-gl=desktop rather than --use-gl=swiftshader, still needs more testing.

//   // optimze fps
//   "--enable-surface-synchronization",
//   "--run-all-compositor-stages-before-draw",
//   "--disable-threaded-animation",
//   "--disable-threaded-scrolling",
//   "--disable-checker-imaging",

//   "--disable-new-content-rendering-timeout",
//   "--disable-image-animation-resync",
//   "--disable-partial-raster",

//   "--blink-settings=primaryHoverType=2,availableHoverTypes=2,primaryPointerType=4,availablePointerTypes=4",

//   // '--deterministic-mode',                          // Some friends commented that with this parameter mouse movement is stuck, so let's comment it out
//   // '--disable-web-security',
//   // '--disable-cache',                               // cache
//   // '--disable-application-cache',
//   // '--disable-offline-load-stale-cache',
//   // '--disable-gpu-shader-disk-cache',
//   // '--media-cache-size=0',
//   // '--disk-cache-size=0',
//   // '--enable-experimental-web-platform-features',   // Make Chrome for Linux support Bluetooth. eg: navigator.bluetooth, window.BluetoothUUID
//   // '--disable-gpu',                                 // Cannot be disabled: otherwise webgl will not work
//   // '--disable-speech-api',                          // Cannot be disabled: some websites use speech-api as fingerprint
//   // '--no-startup-window',                           // Cannot be enabled: Chrome won't open the window and puppeteer thinks it's not connected
//   // '--disable-webgl',                               // Requires webgl fingerprint
//   // '--disable-webgl2',
//   // '--disable-notifications',                       // Cannot be disabled: notification-api not available, fingerprints will be dirty
// ];

export const kDefaultLaunchArgs = [
  // "--no-sandbox",
  `--disable-dev-shm-usage`,
  `--disable-web-security`,
  `--disable-features=IsolateOrigins`,
  `--disable-site-isolation-trials`,
  "--no-pings",
  "--mute-audio",
  "--no-first-run",
  "--no-default-browser-check",
  // "--disable-software-rasterizer",
  "--disable-cloud-import",
  "--disable-gesture-typing",
  "--disable-offer-store-unmasked-wallet-cards",
  "--disable-offer-upload-credit-cards",
  "--disable-print-preview",
  "--disable-voice-input",
  "--disable-wake-on-wifi",
  "--disable-cookie-encryption",
  "--ignore-gpu-blocklist",
  "--enable-async-dns",
  "--enable-simple-cache-backend",
  "--enable-tcp-fast-open",
  "--enable-webgl",
  "--prerender-from-omnibox=disabled",
  "--enable-web-bluetooth",
  "--disable-site-isolation-trials",
  "--disable-features=AudioServiceOutOfProcess,IsolateOrigins,site-per-process,TranslateUI,BlinkGenPropertyTrees",
  "--aggressive-cache-discard",
  "--disable-extensions",
  "--disable-blink-features",
  "--disable-blink-features=AutomationControlled",
  "--disable-ipc-flooding-protection",
  "--enable-features=NetworkService,NetworkServiceInProcess,TrustTokens,TrustTokensAlwaysAllowIssuance",
  "--disable-component-extensions-with-background-pages",
  "--disable-default-apps",
  "--disable-breakpad",
  "--disable-component-update",
  "--disable-domain-reliability",
  "--disable-sync",
  "--disable-client-side-phishing-detection",
  "--disable-hang-monitor",
  "--disable-popup-blocking",
  "--disable-prompt-on-repost",
  "--metrics-recording-only",
  "--safebrowsing-disable-auto-update",
  "--password-store=basic",
  "--autoplay-policy=no-user-gesture-required",
  "--use-mock-keychain",
  "--force-webrtc-ip-handling-policy=default_public_interface_only",
  "--disable-session-crashed-bubble",
  "--disable-crash-reporter",
  "--disable-dev-shm-usage",
  "--force-color-profile=srgb",
  "--disable-translate",
  "--disable-background-networking",
  "--disable-background-timer-throttling",
  "--disable-backgrounding-occluded-windows",
  "--disable-infobars",
  "--hide-scrollbars",
  "--disable-renderer-backgrounding",
  "--font-render-hinting=none",
  "--disable-logging",
  "--use-gl=swiftshader",
  // optimze fps
  "--enable-surface-synchronization",
  "--run-all-compositor-stages-before-draw",
  "--disable-threaded-animation",
  "--disable-threaded-scrolling",
  "--disable-checker-imaging",
  "--disable-new-content-rendering-timeout",
  "--disable-image-animation-resync",
  "--disable-partial-raster",
  "--blink-settings=primaryHoverType=2,availableHoverTypes=2,primaryPointerType=4,availablePointerTypes=4",
];

export const kBrowserMaxSurvivalTime: number = 60 * 1000 * 15;
export const kDefaultReferers: Array<string> = [
  "https://www.google.com",
  "https://www.bing.com",
];
export const kInternalHttpServerPort: number = 17311;
export const kDefaultWindowsDD = require(path.resolve(__dirname, "./Windows"));
